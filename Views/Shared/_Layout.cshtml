<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - SocialMediaWisLam</title>
    <link href="https://cdn.jsdelivr.net/npm/daisyui@4.7.2/dist/full.min.css" rel="stylesheet" type="text/css" />
    <script src="https://cdn.tailwindcss.com"></script>
    <link rel="stylesheet" href="~/css/styles.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/SocialMediaWisLam.styles.css" asp-append-version="true" />
</head>
<body>
    <header>
        <div class="navbar bg-base-100 mb-3">
            <div class="navbar-start">
                <div class="flex">
                    <a class="btn btn-ghost text-lg hidden md:flex">WisLam</a>
                    <div class="form-control mr-2 hidden md:block">
                        <form asp-controller="Search" asp-action="Index" method="get">
                            <input type="text" name="searchString" placeholder="Search" class="input input-bordered w-24 md:w-auto" />
                            <input type="submit" value="search" class="hidden" />
                        </form>
                    </div>
                </div>
            </div>
            <div class="navbar-center">
                <button id="btnSearchMoblie" class="btn btn-ghost flex md:hidden">
                    <img src="~/source/img/search.png" alt="search.png" width="24" height="24" />
                </button>
                <button id="btnLeftSide" class="btn btn-ghost text-xl flex xl:hidden">
                    <img src="~/source/img/menu.png" alt="menu.png" width="24" height="24" />
                </button>
                <a href="/" class="btn btn-ghost text-xl">
                    <img width="24" height="24" alt="home.png" src="~/source/img/home.png" />
                </a>
                <button id="btnRightSide" class="btn btn-ghost text-xl flex lg:hidden">
                    <img src="~/source/img/messenger.png" alt="messenger.png" width="24" height="24" />
                </button>
            </div>
            <div class="navbar-end">
                <div class="dropdown dropdown-end">
                    <div id="btn-notification" tabindex="0" role="button" class="btn btn-ghost btn-circle ">
                        <div class="indicator">
                            <svg  xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 17h5l-1.405-1.405A2.032 2.032 0 0118 14.158V11a6.002 6.002 0 00-4-5.659V5a2 2 0 10-4 0v.341C7.67 6.165 6 8.388 6 11v3.159c0 .538-.214 1.055-.595 1.436L4 17h5m6 0v1a3 3 0 11-6 0v-1m6 0H9" /></svg>
                            <span id="indicator-notication" class="badge badge-xs badge-primary indicator-item"></span>
                        </div>
                    </div>
                    <ul id="notification-post" tabindex="0" class="z-20 menu menu-sm dropdown-content mt-3 p-2 shadow bg-base-100 rounded-box w-52">
                        <li class="flex flex-col items-center border rounded-lg">
                            <div class="font-semibold">new Post From Abc</div>
                            <button class="btn btn-circle btn-outline w-10 h-10">
                                <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" /></svg>
                            </button>
                        </li>
                    </ul>
                </div>
                <partial name="_LoginPartial" />
            </div>
        </div>

        <div id="searchMoblie" class="form-control hidden my-3 mx-2">
            <form asp-controller="Search" asp-action="Index" method="get">
                <input type="text" name="searchString" placeholder="Search" class="input input-bordered w-full" />
                <input type="submit" value="search" class="hidden" />
            </form>
        </div>
    </header>

    <main role="main">
        @RenderBody()
    </main>

    <script>
        
        
        /**
         * 
         *<li class="flex flex-col items-center border rounded-lg">
         *  <div class="font-semibold">new Post From Abc</div>
         *  <button class="btn btn-circle btn-outline w-10 h-10">
         *      <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" /></svg>
         *  </button>
         *</li>
         * 
         */

        fetch("/GetNotificationPost")
            .then((response) => response.json())
            .then(arr => {
                document.getElementById("notification-post").innerHTML = "";
                arr.forEach(item => {
                    const li = document.createElement("li");
                    const div = document.createElement("div");
                    const button = document.createElement("button");
                    const svg = `<svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" /></svg>`;
                    
                    li.classList.add("flex", "flex-col", "items-center", "border", "rounded-lg");
                    div.classList.add("font-semibold");
                    button.classList.add("btn", "btn-circle", "btn-outline", "w-10", "h-10");
                    button.innerHTML = svg;
                    div.innerText = item.description;

                    button.addEventListener("click", () => {
                        const url = "DeleteNotificationPost/" + item.userId + "-" + item.postId;

                        const options = {
                            method: 'DELETE', // Specify the HTTP method as DELETE
                        };

                        // Perform the fetch request
                        fetch(url, options)
                            .then(response => {
                                if (!response.ok) {
                                    throw new Error('Network response was not ok');
                                }
                                return response.json();
                            })
                            .then(data => {
                                console.log('Deleted successfully', data);
                                li.remove();
                            })
                            .catch(error => {
                                console.error('There was a problem with your fetch operation:', error);
                            });
                    });

                    li.append(div, button);
                    document.getElementById("notification-post").append(li);
                });
            });
    </script>

    <script>
        const btnSearchMoblie = document.getElementById("btnSearchMoblie");
        const searchMoblie = document.getElementById("searchMoblie");
        const cBothSide = document.getElementsByClassName("c-bolh-sides");
        const btnMenu = document.getElementById("btnLeftSide");
        const btnFriends = document.getElementById("btnRightSide");
        var toggleLeft = 0;
        var toggleRight = 0;
        var toggleSearchM = 0;

        if (window.location.href.split("/")[3] != "") {
            btnMenu.classList.add("hidden");
            btnFriends.classList.add("hidden");
        };

        btnSearchMoblie.addEventListener("click", () => {
            if (toggleSearchM == 0) {
                searchMoblie.classList.remove("hidden");
                toggleSearchM = 1;
            } else {
                searchMoblie.classList.add("hidden");
                toggleSearchM = 0;
            }
        });

        btnMenu.addEventListener("click", () => {
            if (toggleLeft == 0) {
                cBothSide[0].classList.remove("hidden");
                toggleLeft = 1;
            } else {
                cBothSide[0].classList.add("hidden");
                toggleLeft = 0;
            }
            console.log("left");
        });

        btnFriends.addEventListener("click", () => {
            if (toggleRight == 0) {
                cBothSide[1].classList.remove("hidden")
                toggleRight = 1;
            } else {
                cBothSide[1].classList.add("hidden")
                toggleRight = 0;
            }
            console.log("right");
        });


        console.log(cBothSide[0]);
        console.log(cBothSide[1]);

    </script>

    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>
    @await RenderSectionAsync("Scripts", required: false)
</body>
</html>
